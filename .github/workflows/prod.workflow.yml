name: Master Workflow - Build and deploy to production
on:
  push:
    branches:
      - cd-docker

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      DEBUG: ${{ secrets.DEBUG }}
      DJANGO_KEY: ${{ secrets.DJANGO_KEY }}
      NAME_DB_HEROKU: ${{ secrets.TES_NAME_DB_HEROKU }}
      USER_DB_HEROKU: ${{ secrets.TEST_USER_DB_HEROKU }}
      PASSWORD_DB_HEROKU: ${{ secrets.TEST_PASSWORD_DB_HEROKU }}
      HOST_DB_HEROKU: ${{ secrets.TEST_HOST_DB_HEROKU }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_STORAGE_BUCKET_NAME: ${{ secrets.AWS_STORAGE_BUCKET_NAME }}
      POSTGRES_NAME: github_actions
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: 127.0.0.1
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install pipenv
      run: |
        python -m pip install pipenv
    - name: Create virtual environment with dependencies
      run: |
        python -m pipenv install
    - name: Use isort
      run: |
        pipenv run isort .
    - name: Use Black
      run: |
        pipenv run black .
    - name: Flake
      run: |
        pipenv run flake8
    - name: Pylint
      run: |
        pipenv run pylint ./ecommerce
    - name: Run migrations
      run: |
        pipenv run python manage.py migrate
    - name: Run Tests
      run: |
        pipenv run python manage.py test
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.TEST_HEROKU_API_KEY}}
          heroku_app_name: "test-marketplace-django" #Must be unique in Heroku
          heroku_email: "devrrior@gmail.com"
          usedocker: true
        env:
          HD_POSTGRES_NAME: ${{secrets.TEST_NAME_DB_HEROKU}}
          HD_POSTGRES_USER: ${{secrets.TEST_USER_DB_HEROKU}}
          HD_POSTGRES_PASSWORD: ${{secrets.TEST_PASSWORD_DB_HEROKU}}
          HD_POSTGRES_HOST: ${{secrets.TEST_HOST_DB_HEROKU}}
          HD_DJANGO_KEY: ${{secrets.DJANGO_KEY}}
          HD_DEBUG: ${{secrets.DEBUG}}
          HD_AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          HD_AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          HD_AWS_STORAGE_BUCKET_NAME: ${{secrets.AWS_STORAGE_BUCKET_NAME}}
          HD_STRIPE_PRIVATE_KEY: ${{secrets.STRIPE_PRIVATE_KEY}}
          HD_STRIPE_PUBLIC_KEY: ${{secrets.STRIPE_PUBLIC_KEY}}
